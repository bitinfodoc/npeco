{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 * 'animated zoomIn delay-2s',
 * @ingroup themeable
 */
#}
{%
    set classes = [
    'paragraph',
    'features',
    'pb-3',
    'fadein-block',
    'wow fadeIn',
]
%}

{% set hover_effect = paragraph.getBehaviorSetting('custompar_paragraph_hover', 'hover_effect', '') %}

{#{% if hover_effect is not empty %}#}
{#    {% set hover_animation = 'hover-' ~ hover_effect ~ ' hover-animate animated' %}#}
{#{% endif %}#}

{% if hover_effect is not empty %}
    {% set hover_animation = hover_effect ~ ' hover-animate' %}
{% endif %}


{% block paragraph %}
<div{{ attributes.addClass(classes) }}>
    {% block content %}
    <div class="{{ hover_animation }} h-100 d-flex align-content-between flex-wrap ">
            <div class="item w-100 flex-nowrap">

                {{ content.field_features_image }}
                {{ content.field_features_title }}
                {{ content.field_features_text }}

            </div>
            <div class="item w-100">
                {{ content.field_features_bottom }}
                {{ content.field_button }}
            </div>
    </div>

    {% endblock %}
</div>
{% endblock paragraph %}